/*
 * This file is generated by jOOQ.
 */
package io.xj.hub.tables.pojos;


import io.xj.hub.enums.ContentBindingType;
import io.xj.hub.tables.interfaces.ITemplateBinding;

import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TemplateBinding implements ITemplateBinding {

    private static final long serialVersionUID = 1L;

    private UUID               id;
    private ContentBindingType type;
    private UUID               templateId;
    private UUID               targetId;

    public TemplateBinding() {}

    public TemplateBinding(ITemplateBinding value) {
        this.id = value.getId();
        this.type = value.getType();
        this.templateId = value.getTemplateId();
        this.targetId = value.getTargetId();
    }

    public TemplateBinding(
        UUID               id,
        ContentBindingType type,
        UUID               templateId,
        UUID               targetId
    ) {
        this.id = id;
        this.type = type;
        this.templateId = templateId;
        this.targetId = targetId;
    }

    /**
     * Getter for <code>xj.template_binding.id</code>.
     */
    @Override
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>xj.template_binding.id</code>.
     */
    @Override
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>xj.template_binding.type</code>.
     */
    @Override
    public ContentBindingType getType() {
        return this.type;
    }

    /**
     * Setter for <code>xj.template_binding.type</code>.
     */
    @Override
    public void setType(ContentBindingType type) {
        this.type = type;
    }

    /**
     * Getter for <code>xj.template_binding.template_id</code>.
     */
    @Override
    public UUID getTemplateId() {
        return this.templateId;
    }

    /**
     * Setter for <code>xj.template_binding.template_id</code>.
     */
    @Override
    public void setTemplateId(UUID templateId) {
        this.templateId = templateId;
    }

    /**
     * Getter for <code>xj.template_binding.target_id</code>.
     */
    @Override
    public UUID getTargetId() {
        return this.targetId;
    }

    /**
     * Setter for <code>xj.template_binding.target_id</code>.
     */
    @Override
    public void setTargetId(UUID targetId) {
        this.targetId = targetId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TemplateBinding (");

        sb.append(id);
        sb.append(", ").append(type);
        sb.append(", ").append(templateId);
        sb.append(", ").append(targetId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITemplateBinding from) {
        setId(from.getId());
        setType(from.getType());
        setTemplateId(from.getTemplateId());
        setTargetId(from.getTargetId());
    }

    @Override
    public <E extends ITemplateBinding> E into(E into) {
        into.from(this);
        return into;
    }
}
