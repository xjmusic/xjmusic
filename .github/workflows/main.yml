name: "Continuous Integration"

on:
  push:
    branches:
      - main

jobs:
  CI:
    env:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
      CI_BOT_USERNAME: ${{ secrets.CI_BOT_USERNAME }}
    name: Continuous Integration
    runs-on: ubuntu-22.04
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: burrunan/gradle-cache-action@v1
        name: Cache Gradle
        with:
          job-id: jdk17

      - name: Install and cache system packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ffmpeg gpac
          version: 1.0

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          java-package: jdk

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle8-java17-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle8-java17-

      - name: Build & Run Tests
        run: "./gradlew --info --no-daemon build test"
        continue-on-error: false

      - name: Nothing left TODO
        run: .github/nothing_left_todo.sh

      - name: (GCP) Authenticate and setup Google Cloud SDK
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: (GCP) Build & push Docker images
        run: |
          ./gradlew --info --no-daemon \
            -PjibFromImage=gcr.io/xj-vpc-host-prod/base:latest \
            -PjibToImageRegistry=gcr.io/xj-vpc-host-prod \
            jib
        continue-on-error: false

      - name: Build shadowed JAR for distribution
        run: |
          ./gradlew --info --no-daemon shadowJar
        continue-on-error: false

      - name: Extract distribution files
        run: |
          mkdir -p workstation/build/distributions/workstation-dist/
          tar -xf workstation/build/distributions/workstation-1.0-SNAPSHOT.tar -C workstation/build/distributions/workstation-dist/
          mv workstation/build/distributions/workstation-dist/workstation-1.0-SNAPSHOT workstation/build/distributions/workstation-dist/xjmusic-workstation
        continue-on-error: false

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v3
        with:
          name: workstation-dist
          path: ./workstation/build/distributions/workstation-dist/

      - name: Build App Installer Bundles
        uses: shannah/jdeploy@master
        with:
          target_repository: xjmusic/workstation
          github_token: ${{ github.token }}
