name: Engine CI

on:
  push:
    branches:
      - main
    paths:
      - engine/**

jobs:

  nothing_left_todo:
    env:
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      REPO_USERNAME: ${{ secrets.REPO_USERNAME }}
    name: Nothing Left TODO
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Nothing left TODO
        run: .github/nothing_left_todo.sh engine

  build_and_test:
    needs: nothing_left_todo
    env:
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      REPO_USERNAME: ${{ secrets.REPO_USERNAME }}
    name: Build & Test [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    permissions: write-all
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13, macos-14, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        working-directory: engine/
        run: |
          choco install cmake
          choco install mingw
          choco install ninja

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        working-directory: engine/
        run: |
          sudo apt-get install -y cmake

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        working-directory: engine/
        run: |
          brew install cmake

      - name: Build (Windows)
        if: runner.os == 'Windows'
        working-directory: engine/
        run: |
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -G "Ninja" ..
          cmake --build .

      - name: Build (macOS/Linux)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        working-directory: engine/
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

      - name: Test
        working-directory: engine/
        run: |
          cd build
          ctest --verbose
