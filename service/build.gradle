// Copyright (c) XJ Music Inc. (https://xjmusic.com) All Rights Reserved.

plugins {
  id 'java'
  id 'application'
  id 'distribution'
  //
  id 'com.google.cloud.tools.jib'
  id 'de.undercouch.download'
  id 'io.spring.dependency-management'
  id 'org.ajoberstar.grgit'
  id 'org.springframework.boot'
}

description = 'XJ music workstation'

apply plugin: 'java'

dependencies {
  implementation project(":lib")
  testImplementation project(path: ':lib')
  testImplementation(project(':lib').sourceSets.test.output)
  implementation project(":nexus")
  testImplementation project(path: ':nexus')
  testImplementation(project(':nexus').sourceSets.test.output)
  // private
  implementation "io.xj:models:${rootProject.ext.xjModelsVersion}"
  testImplementation "io.xj:models:${rootProject.ext.xjModelsVersion}"
  // vendor
  implementation "com.fasterxml.jackson.core:jackson-annotations:${rootProject.ext.jacksonAnnotationsVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${rootProject.ext.jacksonAnnotationsVersion}"
  implementation "org.springframework.boot:spring-boot-starter-web:${rootProject.ext.springBootVersion}"
  implementation 'com.github.axet:TarsosDSP:2.4-1'
  implementation 'com.github.rholder:snowball-stemmer:1.3.0.581.1'
  implementation 'com.typesafe:config:1.4.2'
  implementation 'commons-codec:commons-codec:1.15'
  implementation 'commons-io:commons-io:2.11.0'
  implementation 'me.xdrop:fuzzywuzzy:1.4.0'
  implementation 'org.apache.httpcomponents:httpclient:4.5.14'
  implementation 'org.mp4parser:isoparser:1.9.41'
  implementation 'org.mp4parser:muxer:1.9.41'
  implementation 'org.mp4parser:streaming:1.9.41'
  implementation 'org.reflections:reflections:0.10.2'
  implementation "org.slf4j:log4j-over-slf4j:${rootProject.ext.slf4jVersion}"
  implementation "org.slf4j:slf4j-api:${rootProject.ext.slf4jVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${rootProject.ext.junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${rootProject.ext.junitVersion}"
  testImplementation 'org.mockito:mockito-junit-jupiter'
  testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

jar {
  manifest {
    attributes 'Main-Class': 'io.xj.workstation.service.WorkstationServiceApplication'
  }
}

application {
  mainClassName = 'io.xj.workstation.service.WorkstationServiceApplication'
}

// Ship to multiple repositories https://www.pivotaltracker.com/story/show/180684409
jib {
  container.jvmFlags = ["-Djava.library.path=/usr/lib/x86_64-linux-gnu", "-Xmx3500m"]
  // set from CI command: (for building and pushing the image to multiple repositories)
  from.image = project.jibFromImage
  to.image = project.jibToImageRegistry + '/workstation-service'
}

test {
  useJUnitPlatform()
}
