// Copyright (c) XJ Music Inc. (https://xjmusic.com) All Rights Reserved.

plugins {
  id 'java'
  id 'application'
  id 'maven-publish'
  //
  id 'org.beryx.jlink'
  id 'org.openjfx.javafxplugin'
  id 'org.springframework.boot'
  id 'com.github.johnrengelman.shadow'
}

javafx {
  version = "${rootProject.ext.javaFxVersion}"
  modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

ext.os = org.gradle.internal.os.OperatingSystem.current()
jlink {
  // imageZip = file("$buildDir/image-zip/xjmusic-workstation.zip")
  // options = ['--bind-services', '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  addExtraDependencies 'javafx'
  addExtraDependencies 'jooq'
  addExtraDependencies 'jackson'

  launcher {
    name = 'xjmusic-workstation'
    noConsole = true
  }
  jpackage {
    if (os.windows) {
//      installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
    }
  }
}

// Publishing a Shadow JAR with the Maven-Publish Plugin
publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
    }
  }
}

configurations {
  implementation.exclude group: "commons-logging", module: "commons-logging"
  implementation.exclude group: 'com.google.code.findbugs', module: 'jsr305'
}

dependencies {
  // peers
  implementation project(":lib")
  implementation project(":nexus")
  testImplementation(testFixtures(project(":nexus")))
  // private
  implementation "io.xj:models:${rootProject.ext.xjModelsVersion}"
  // vendor
  implementation "ch.qos.logback:logback-classic:${rootProject.ext.logbackVersion}"
  implementation "ch.qos.logback:logback-core:${rootProject.ext.logbackVersion}"
  implementation "org.jooq:jooq:${rootProject.ext.jooqVersion}"
  implementation "org.openjfx:javafx-base:${rootProject.ext.javaFxVersion}"
  implementation "org.openjfx:javafx-controls:${rootProject.ext.javaFxVersion}"
  implementation "org.openjfx:javafx-fxml:${rootProject.ext.javaFxVersion}"
  implementation "org.openjfx:javafx-graphics:${rootProject.ext.javaFxVersion}"
  implementation "org.springframework.boot:spring-boot-starter-logging:${rootProject.ext.springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter:${rootProject.ext.springBootVersion}"
  implementation 'com.typesafe:config:1.4.2'
  implementation 'commons-codec:commons-codec:1.15'
  implementation 'commons-io:commons-io:2.11.0'
  implementation 'io.projectreactor.tools:blockhound:1.0.6.RELEASE'
  implementation 'me.xdrop:fuzzywuzzy:1.4.0'
  implementation 'org.apache.httpcomponents:httpclient:4.5.14'
  implementation 'org.reflections:reflections:0.10.1'
  testImplementation "org.junit.jupiter:junit-jupiter-api:${rootProject.ext.junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${rootProject.ext.junitVersion}"
}

jar {
  manifest {
    attributes 'Main-Class': 'io.xj.gui.WorkstationGuiApplication'
  }
}

application {
  mainClassName = 'io.xj.gui.WorkstationGuiApplication'
}

test {
  useJUnitPlatform()
}

repositories {
  mavenCentral()
}
