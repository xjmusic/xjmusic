// Copyright (c) XJ Music Inc. (https://xjmusic.com) All Rights Reserved.

plugins {
  id 'java'
  id 'application'
  //
  id 'org.openjfx.javafxplugin'
  id 'org.springframework.boot'
  id 'org.panteleyev.jpackageplugin'
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

mainClassName = 'io.xj.workstation.WorkstationApplication'

javafx {
  version = "${rootProject.ext.javaFxVersion}"
  modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

tasks.register('copyDependencies', Copy) {
  from(configurations.runtimeClasspath).into("$buildDir/jmods")
}

tasks.register('copyJar', Copy) {
  from(tasks.jar).into("$buildDir/jmods")
}

tasks.jpackage {
  dependsOn("build", "copyDependencies", "copyJar")

  appName = "XJ music workstation"
  appVersion = project.version.toString()
  vendor = "io.xj"
  copyright = "Copyright (c) XJ Music Inc."
  runtimeImage = System.getProperty("java.home")
    module = "io.xj.workstation/io.xj.workstation.main"
  def buildDirectory = new File("$buildDir/jmods")
  modulePaths = buildDirectory.listFiles().findAll { it.isFile() }.toList()
  destination = "$buildDir/dist"
  javaOptions = ["-Dfile.encoding=UTF-8"]

  mac {
    icon = "icons/icon.icns"
  }

  linux {
    icon = "icons/icon.png"
  }

  windows {
    icon = "icons/icon.ico"
    winMenu = true
    winDirChooser = true
  }
}

dependencies {
  // lib
  implementation project(":lib")
  testImplementation(project(':lib').sourceSets.test.output)
  // hub_client
  implementation project(":hub_client")
  testImplementation(project(':hub_client').sourceSets.test.output)
  // nexus
  testImplementation(testFixtures(project(":nexus")))
  implementation project(":nexus")
  // vendor
  implementation "org.springframework.boot:spring-boot-starter-web:${rootProject.ext.springBootVersion}"
  implementation 'org.jetbrains:annotations:24.0.1'
  implementation "org.openjfx:javafx-base:${rootProject.ext.javaFxVersion}"
  implementation "org.openjfx:javafx-controls:${rootProject.ext.javaFxVersion}"
  implementation "org.openjfx:javafx-fxml:${rootProject.ext.javaFxVersion}"
  implementation "org.openjfx:javafx-graphics:${rootProject.ext.javaFxVersion}"
  implementation 'org.slf4j:log4j-over-slf4j:2.0.5'
  implementation 'org.slf4j:slf4j-api:2.0.5'
  testImplementation "org.springframework.boot:spring-boot-starter-test:${rootProject.ext.springBootVersion}"
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
  useJUnitPlatform()
}
