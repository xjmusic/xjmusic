// Copyright (c) XJ Music Inc. (https://xjmusic.com) All Rights Reserved.

plugins {
  id 'java'
  id 'java-test-fixtures'
  id 'application'
  id 'distribution'
  //
  id 'com.google.cloud.tools.jib'
  id 'de.undercouch.download'
  id 'io.spring.dependency-management'
  id 'org.ajoberstar.grgit'
  id 'org.springframework.boot'
}

group = 'io.xj'
version = '1.0'
sourceCompatibility = '17'
description = 'XJ music workstation'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

apply plugin: 'java'

dependencies {
  // lib
  implementation project(":lib")
  testImplementation project(path: ':lib')
  testImplementation project(path: ':lib')
  testImplementation project(path: ':lib')
  testFixturesImplementation(project(":lib"))
  testImplementation(project(':lib').sourceSets.test.output)
  // nexus
  testImplementation(testFixtures(project(":nexus")))
  // vendor
  implementation "com.fasterxml.jackson.core:jackson-annotations:${rootProject.ext.jacksonAnnotationsVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${rootProject.ext.jacksonAnnotationsVersion}"
  implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${rootProject.ext.jacksonAnnotationsVersion}"
  implementation "org.springframework.boot:spring-boot-starter-web:${rootProject.ext.springBootVersion}"
  implementation 'com.github.axet:TarsosDSP:2.4-1'
  implementation 'com.github.rholder:snowball-stemmer:1.3.0.581.1'
  implementation 'com.github.trilarion:java-vorbis-support:1.2.1'
  implementation 'com.typesafe:config:1.4.2'
  implementation 'com.zaxxer:HikariCP:5.0.1'
  implementation 'commons-codec:commons-codec:1.15'
  implementation 'commons-io:commons-io:2.11.0'
  implementation 'javax.activation:activation:1.1.1'
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  implementation 'javax.cache:cache-api:1.1.1'
  implementation 'javax.validation:validation-api:2.0.1.Final'
  implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
  implementation 'me.xdrop:fuzzywuzzy:1.4.0'
  implementation 'org.apache.httpcomponents:httpclient:4.5.14'
  implementation 'org.jetbrains:annotations:24.0.1'
  implementation 'org.jooq:jooq:3.18.0'
  implementation 'org.json:json:20230227'
  implementation 'org.mp4parser:isoparser:1.9.41'
  implementation 'org.mp4parser:muxer:1.9.41'
  implementation 'org.mp4parser:streaming:1.9.41'
  implementation 'org.reflections:reflections:0.10.2'
  implementation 'org.slf4j:log4j-over-slf4j:2.0.5'
  implementation 'org.slf4j:slf4j-api:2.0.5'
  implementation 'org.yaml:snakeyaml:2.0'
  implementation 'software.amazon.awssdk:cloudwatch'
  implementation 'software.amazon.awssdk:secretsmanager'
  implementation platform('software.amazon.awssdk:bom:2.20.56')
  implementation("org.springframework.boot:spring-boot-starter-web:${rootProject.ext.springBootVersion}") {
    exclude group: 'spring-boot-starter-web', module: 'spring-aop'
  }
  testFixturesImplementation 'com.typesafe:config:1.4.2'
  testFixturesImplementation 'org.jooq:jooq:3.18.0'
  testFixturesImplementation 'org.slf4j:slf4j-api:2.0.5'
  testFixturesImplementation 'org.jetbrains:annotations:24.0.1'
  testImplementation "org.springframework.boot:spring-boot-starter-test:${rootProject.ext.springBootVersion}"
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.jetbrains:annotations:24.0.1'
  testImplementation 'org.assertj:assertj-core:3.24.2'
  testImplementation 'org.jetbrains:annotations:24.0.1'
  testImplementation 'org.hamcrest:hamcrest-library:2.2'
  testImplementation 'org.mockito:mockito-core:5.2.0'
}

jar {
  manifest {
    attributes 'Main-Class': 'io.xj.nexus.NexusApplication'
  }
}

application {
  mainClassName = 'io.xj.nexus.NexusApplication'
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
  modularity.inferModulePath = true
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

// Ship to multiple repositories https://www.pivotaltracker.com/story/show/180684409
jib {
  container.jvmFlags = ["-Djava.library.path=/usr/lib/x86_64-linux-gnu", "-Xmx3500m"]
  // set from CI command: (for building and pushing the image to multiple repositories)
  from.image = project.jibFromImage
  to.image = project.jibToImageRegistry + '/' + name
}

